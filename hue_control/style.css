/* .frame {
  width: 100px;
  height: 300px;
  background-color: #ffffff;
  border: 1px solid #000000;
} */

.real-parent {
  display: flex;
  justify-content: center;
  align-items: center;
}
.frame-border {
  position: absolute;
  width: 244px;
  height: 10.25rem; /*0.125*2*/
  /* border: 3px solid #b6b6b6; */
  background-color: #b6b6b6;

  border-radius: 12px; /*10+2*/
}
.frame-parent {
  position: relative;
  display: flex;
  align-items: end;
  /* gap: 10px; */
  border-radius: 10px;
  background: #f5f5f5;
  /* padding: 10px; */
  /* box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1); */

  /* border: 3px solid #b6b6b6; */
  box-shadow: 0 0 5px 6px rgba(200, 200, 200, 0.5);
  width: 240px;
  height: 10rem;
  justify-content: space-around;
}

.frame-background-tophalf {
  /* this is the first half */
  position: absolute;
  top: 0;
  background: linear-gradient(
    to right,
    white 0%,
    #f2f2f2 5%,
    #eeeeee 50%,
    #eeeeee 95%,
    #cbcbcb 100% /* 100% 最深灰 */
  );
  border-radius: 10px;
  width: 240px;
  height: 5rem;
}
.frame-background-btmhalf {
  /* this is the first half */
  position: absolute;
  bottom: 0;
  background: #c5c5c5;
  border-radius: 10px;
  width: 240px;
  height: 5rem;

  /* filter: blur(2px); */
}
.frame {
  width: 80px;
  height: 9rem;

  background: linear-gradient(to bottom, #ffffff, #e0e0e0);
  /* background: #eeedec; */

  /* border-radius: 10px; */
  /* border-radius: 10px 0 0 10px; */
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  cursor: pointer;
  transition: all 0.3s ease-in-out;
  border: none;

  box-shadow: 0 -10px 30px 10px rgba(255, 255, 255, 0.5);
}

#button1 {
  border-radius: 10px 0 0 10px;
  border-right: 1px solid #b0b0b0;
}
#button2 {
  border-radius: 0 0 0 0;
  border-right: 1px solid #b0b0b0;
  border-left: 1px solid #b0b0b0;
}
#button3 {
  border-radius: 0 10px 10px 0;
  border-left: 1px solid #b0b0b0;
}

.frame::before {
  /* this is just the dot  */
  content: "";
  width: 6px;
  height: 6px;
  background: #ff611b;
  border-radius: 50%;
  position: absolute;
  top: 20px;
}

.frame.active {
  background: linear-gradient(to bottom, #ffffff, #f6f5f5);
  /* box-shadow: inset 2px 2px 5px rgba(0, 0, 0, 0.2); */
  transform: translateY(-1rem);
  /*box-shadow: 0 0 5px 3px rgba(200, 200, 200, 0.5);  needs update ⚠️*/

  box-shadow: 0 10px 20px -10px rgba(0, 0, 0, 0.3);
}

.frame.active::before {
  background: #b0b0b0;
}

.frame-stroke {
  background-color: #b0b0b0;
  width: 2px;
  height: 10rem;
  position: absolute;
}

#stroke1 {
  left: 78.5px;
}

#stroke2 {
  left: 159.5px;
}

/* -------- */

/* Container just to group input + label */
.toggle-switch {
  position: relative;
  display: inline-block;
}

/* Hide the checkbox itself */
.toggle-switch input {
  display: none;
}

/* The switch "track" */
.switch {
  display: block;
  width: 60px; /* Adjust for desired width */
  height: 30px; /* Adjust for desired height */
  border-radius: 30px;
  background: linear-gradient(
    to right,
    #f8f8f8,
    #eaeaea
  ); /* Off-state gradient */
  position: relative;
  cursor: pointer;
  transition: background 0.3s;

  /* Subtle inset shadows for a 3D effect */
  /* box-shadow: inset -2px -2px 5px rgba(255, 255, 255, 0.7),
    inset 2px 2px 5px rgba(0, 0, 0, 0.05); */
}

/* The circular knob */
.switch::before {
  content: "";
  position: absolute;
  top: 3px;
  left: 3px;
  width: 24px; /* Adjust for knob size */
  height: 24px;
  border-radius: 50%;
  background: #fff; /*Knob color */
  box-shadow: 0 8px 8px rgba(0, 0, 0, 0.2); /* Soft knob shadow */
  transition: transform 0.3s;
}

/* When checked: switch turns orange */
.toggle-switch input:checked + .switch {
  background: #ff611b /* On-state color */;
  /* box-shadow: inset -2px -2px 5px rgba(255, 255, 255, 0.5),
    inset 2px 2px 5px rgba(0, 0, 0, 0.1); */
}

/* Move knob to the right */
.toggle-switch input:checked + .switch::before {
  transform: translateX(
    30px
  ); /* Shift knob right; adjust if you change width */
}
